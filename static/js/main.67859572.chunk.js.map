{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","index.tsx","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["arr","i","hash","o","id1","id2","id3","o1","o2","push","toString","entry1","entry2","entry3","createTestObjects","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","objs1","objs2","console","profile","resultByIndex","index","Map","forEach","set","map","obj2","h","obj1","get","entry11","entry12","entry13","entry21","entry22","entry23","joinByIndex","profileEnd","jo","message","concat","name","resultByRef","joinByRef"],"mappings":"yJAGeA,EAAAC,EC0CTC,EAAO,SAACC,GACV,OAAOA,EAAEC,IAAM,IAAMD,EAAEE,IAAM,IAAMF,EAAEG,OAzBf,WAGtB,IAFA,IAAMC,EAAmB,GACnBC,EAAmB,GAChBP,EAAI,EAAGA,EAAI,IAASA,IACzBM,EAAGE,KAAK,CACJL,IAAKH,EAAES,WACPL,KAAMJ,EAAI,GAAGS,WACbJ,IAAKL,EAAI,EACTU,QAASV,EAAI,GAAGS,WAChBE,QAASX,EAAI,GAAGS,WAChBG,OAAQZ,IAEZO,EAAGC,KAAK,CACJL,IAAKH,EAAES,WACPL,KAAMJ,EAAI,GAAGS,WACbJ,IAAKL,EAAI,EACTU,QAASV,EAAI,GAAGS,WAChBE,QAASX,EAAI,GAAGS,WAChBG,OAAQZ,IAGhB,MAAO,CAACM,EAAIC,GA6COM,MDpFRb,IEHA,SAAAD,GACf,GAAAe,MAAAC,QAAAhB,GAAA,OAAAA,EFGSiB,CADMjB,MGHA,SAAAA,EAAAC,GACf,IAAAiB,EAAA,GACAC,GAAA,EACAC,GAAA,EACAC,OAAAC,EAEA,IACA,QAAAC,EAAAC,EAAAxB,EAAAyB,OAAAC,cAA6CP,GAAAI,EAAAC,EAAAG,QAAAC,QAC7CV,EAAAT,KAAAc,EAAAM,QAEA5B,GAAAiB,EAAAY,SAAA7B,GAH4EkB,GAAA,IAKzE,MAAAY,GACHX,GAAA,EACAC,EAAAU,EACG,QACH,IACAZ,GAAA,MAAAK,EAAA,QAAAA,EAAA,SACK,QACL,GAAAJ,EAAA,MAAAC,GAIA,OAAAH,EHnBgCc,CAAoBhC,EAAAC,IIJrC,WACf,UAAAgC,UAAA,wDJGgEC,ICmFzDC,OAAOC,OACdC,QAAQC,QAAQ,eAChB,IAAMC,EAxCc,SAAChC,EAAkBC,GACnC,IAAMgC,EAAQ,IAAIC,IAGlB,OADAlC,EAAGmC,QAAQ,SAAoBvC,EAAGF,GAAKuC,EAAMG,IAAIzC,EAAKC,GAAIF,KACnDO,EAAGoC,IAAI,SAAwBC,GAClC,IAAMC,EAAI5C,EAAK2C,GACTE,EAAOxC,EAAGiC,EAAMQ,IAAIF,IAC1B,MAAO,CACH5C,KAAM4C,EACNG,QAASF,EAAKpC,OACduC,QAASH,EAAKnC,OACduC,QAASJ,EAAKlC,OACduC,QAASP,EAAKlC,OACd0C,QAASR,EAAKjC,OACd0C,QAAST,EAAKhC,UA0BJ0C,CAAYpB,EAAOC,GACzCC,QAAQmB,WAAW,eACnBjB,EAAcG,QAAQ,SAAAe,GAClB,GAAIA,EAAGN,UAAYM,EAAGH,QAClB,KAAM,CAAEI,QAAO,kCAAAC,OAAoCF,EAAGvD,MAAQ0D,KAAM,kBAI5EvB,QAAQC,QAAQ,aAChB,IAAMuB,EA9BY,SAACtD,EAAkBC,GACjC,IAAMgC,EAAQ,IAAIC,IAGlB,OADAlC,EAAGmC,QAAQ,SAAoBvC,GAAKqC,EAAMG,IAAIzC,EAAKC,GAAIA,KAChDK,EAAGoC,IAAI,SAAsBC,GAChC,IAAMC,EAAI5C,EAAK2C,GACTE,EAAOP,EAAMQ,IAAIF,GACvB,MAAO,CACH5C,KAAM4C,EACNG,QAASF,EAAKpC,OACduC,QAASH,EAAKnC,OACduC,QAASJ,EAAKlC,OACduC,QAASP,EAAKlC,OACd0C,QAASR,EAAKjC,OACd0C,QAAST,EAAKhC,UAgBNiD,CAAU3B,EAAOC,GACrCC,QAAQmB,WAAW,aACnBK,EAAYnB,QAAQ,SAAAe,GAChB,GAAIA,EAAGN,UAAYM,EAAGH,QAClB,KAAM,CAAEI,QAAO,gCAAAC,OAAkCF,EAAGvD,MAAQ0D,KAAM","file":"static/js/main.67859572.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","import './index.css';\n\ninterface TestObject {\n    id1: string;\n    id2: string;\n    id3: number;\n    entry1: string;\n    entry2: string;\n    entry3: number;\n};\n\ninterface JoinObject {\n    hash: string;\n    entry11: string;\n    entry12: string;\n    entry13: number;\n    entry21: string;\n    entry22: string;\n    entry23: number;\n}\n\nconst createTestObjects = (): [TestObject[], TestObject[]] => {\n    const o1: TestObject[] = [];\n    const o2: TestObject[] = [];\n    for (let i = 0; i < 1000000; i++) {\n        o1.push({\n            id1: i.toString(),\n            id2: (i + 1).toString(),\n            id3: i + 2,\n            entry1: (i + 4).toString(),\n            entry2: (i + 3).toString(),\n            entry3: i\n        } as TestObject);\n        o2.push({\n            id1: i.toString(),\n            id2: (i + 1).toString(),\n            id3: i + 2,\n            entry1: (i + 3).toString(),\n            entry2: (i + 4).toString(),\n            entry3: i\n        } as TestObject);\n    }\n    return [o1, o2];\n}\n\nconst hash = (o: TestObject): string => {\n    return o.id1 + \"|\" + o.id2 + \"|\" + o.id3;\n}\n\nconst joinByIndex = (o1: TestObject[], o2: TestObject[]): JoinObject[] => {\n    const index = new Map<string, number>();\n    // insert elements into the index \n    o1.forEach(function addToIndex(o, i) { index.set(hash(o), i); });\n    return o2.map(function fetchFromIndex(obj2) {\n        const h = hash(obj2);\n        const obj1 = o1[index.get(h)!];\n        return {\n            hash: h,\n            entry11: obj1.entry1,\n            entry12: obj1.entry2,\n            entry13: obj1.entry3,\n            entry21: obj2.entry1,\n            entry22: obj2.entry2,\n            entry23: obj2.entry3\n        } as JoinObject;\n    });\n}\n\nconst joinByRef = (o1: TestObject[], o2: TestObject[]): JoinObject[] => {\n    const index = new Map<string, TestObject>();\n    // insert elements into the index \n    o1.forEach(function addToIndex(o) { index.set(hash(o), o); });\n    return o2.map(function fetchFromRef(obj2) {\n        const h = hash(obj2);\n        const obj1 = index.get(h)!;\n        return {\n            hash: h,\n            entry11: obj1.entry1,\n            entry12: obj1.entry2,\n            entry13: obj1.entry3,\n            entry21: obj2.entry1,\n            entry22: obj2.entry2,\n            entry23: obj2.entry3\n        } as JoinObject;\n    });\n}\n\nconst [objs1, objs2] = createTestObjects();\nconsole.profile(\"joinByIndex\");\nconst resultByIndex = joinByIndex(objs1, objs2);\nconsole.profileEnd(\"joinByIndex\");\nresultByIndex.forEach(jo => {\n    if (jo.entry13 !== jo.entry23) {\n        throw { message: `Invalid mapping (joinByIndex): ${jo.hash}`, name: \"Invalid Join\" } as Error;\n    }\n});\n\nconsole.profile(\"joinByRef\");\nconst resultByRef = joinByRef(objs1, objs2);\nconsole.profileEnd(\"joinByRef\");\nresultByRef.forEach(jo => {\n    if (jo.entry13 !== jo.entry23) {\n        throw { message: `Invalid mapping (joinByRef): ${jo.hash}`, name: \"Invalid Join\" } as Error;\n    }\n});","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}"],"sourceRoot":""}